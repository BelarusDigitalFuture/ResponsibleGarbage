// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Responsiblegarbage.Web.Data;

namespace Responsiblegarbage.Web.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20210211172406_AddProductGarbageTypes")]
    partial class AddProductGarbageTypes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasPostgresExtension("postgis")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Responsiblegarbage.Web.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Responsiblegarbage.Web.Models.Dumpster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Point>("Location")
                        .HasColumnType("geometry (point)");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("RecyclerId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("RecyclerId");

                    b.ToTable("Dumpster");
                });

            modelBuilder.Entity("Responsiblegarbage.Web.Models.DumpsterGarbageType", b =>
                {
                    b.Property<int>("DumpsterId")
                        .HasColumnType("integer");

                    b.Property<int>("TypeId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("DumpsterId", "TypeId");

                    b.HasIndex("TypeId");

                    b.ToTable("DumpsterGarbageTypes");
                });

            modelBuilder.Entity("Responsiblegarbage.Web.Models.GarbageType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("GarbageTypes");
                });

            modelBuilder.Entity("Responsiblegarbage.Web.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Barcode")
                        .HasColumnType("text");

                    b.Property<int>("CompanyId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Responsiblegarbage.Web.Models.ProductGarbageType", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("TypeId")
                        .HasColumnType("integer");

                    b.HasKey("ProductId", "TypeId");

                    b.HasIndex("TypeId");

                    b.ToTable("ProductGarbageTypes");
                });

            modelBuilder.Entity("Responsiblegarbage.Web.Models.Recycler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Recyclers");
                });

            modelBuilder.Entity("Responsiblegarbage.Web.Models.Dumpster", b =>
                {
                    b.HasOne("Responsiblegarbage.Web.Models.Recycler", "Recycler")
                        .WithMany("Dumpsters")
                        .HasForeignKey("RecyclerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recycler");
                });

            modelBuilder.Entity("Responsiblegarbage.Web.Models.DumpsterGarbageType", b =>
                {
                    b.HasOne("Responsiblegarbage.Web.Models.Dumpster", "Dumpster")
                        .WithMany("Types")
                        .HasForeignKey("DumpsterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Responsiblegarbage.Web.Models.GarbageType", "Type")
                        .WithMany("Dumpsters")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dumpster");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Responsiblegarbage.Web.Models.Product", b =>
                {
                    b.HasOne("Responsiblegarbage.Web.Models.Company", "Company")
                        .WithMany("Products")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Responsiblegarbage.Web.Models.ProductGarbageType", b =>
                {
                    b.HasOne("Responsiblegarbage.Web.Models.Product", "Product")
                        .WithMany("Types")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Responsiblegarbage.Web.Models.GarbageType", "Type")
                        .WithMany("Products")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Responsiblegarbage.Web.Models.Company", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Responsiblegarbage.Web.Models.Dumpster", b =>
                {
                    b.Navigation("Types");
                });

            modelBuilder.Entity("Responsiblegarbage.Web.Models.GarbageType", b =>
                {
                    b.Navigation("Dumpsters");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Responsiblegarbage.Web.Models.Product", b =>
                {
                    b.Navigation("Types");
                });

            modelBuilder.Entity("Responsiblegarbage.Web.Models.Recycler", b =>
                {
                    b.Navigation("Dumpsters");
                });
#pragma warning restore 612, 618
        }
    }
}
